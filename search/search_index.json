{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to the ! These are the ribbity docs! ribbity is a tool that takes a Github issue tracker and turns it into a Web site using mkdocs . You can see a real live site here: sourmash examples . Ribbity is simple to configure and easy to use. See below! (And yes, this is a ribbity site itself, of course - see the ribbity-docs repo :). Start here! Example: Welcome to ribbity! Start here! Example: create a new Github repository Example: add some issues to your new repository Example: install and configure ribbity! Example: run ribbity for the first time! All examples All categories","title":"Home"},{"location":"index.html#welcome-to-the","text":"These are the ribbity docs! ribbity is a tool that takes a Github issue tracker and turns it into a Web site using mkdocs . You can see a real live site here: sourmash examples . Ribbity is simple to configure and easy to use. See below! (And yes, this is a ribbity site itself, of course - see the ribbity-docs repo :).","title":"Welcome to the !"},{"location":"index.html#start-here","text":"Example: Welcome to ribbity! Start here! Example: create a new Github repository Example: add some issues to your new repository Example: install and configure ribbity! Example: run ribbity for the first time!","title":"Start here!"},{"location":"index.html#all-examples","text":"","title":"All examples"},{"location":"index.html#all-categories","text":"","title":"All categories"},{"location":"1-welcome-to-ribbity-start-here.html","text":"Example: Welcome to ribbity! Start here! ribbity-org/ribbity-docs#1 Hello, and welcome to ribbity! ribbity turns GitHub issue trackers into mkdocs Web sites . You use ribbity by: creating a new repository, adding some issues, and configuring and running ribbity! (This site is an example ribbity site, of course! You can see the repository here .) Next: Example: create a new Github repository Categories This example belongs to the following categories: introductory documentation","title":"Example: Welcome to ribbity! Start here!"},{"location":"1-welcome-to-ribbity-start-here.html#example-welcome-to-ribbity-start-here","text":"ribbity-org/ribbity-docs#1 Hello, and welcome to ribbity! ribbity turns GitHub issue trackers into mkdocs Web sites . You use ribbity by: creating a new repository, adding some issues, and configuring and running ribbity! (This site is an example ribbity site, of course! You can see the repository here .) Next: Example: create a new Github repository","title":"Example: Welcome to ribbity! Start here!"},{"location":"1-welcome-to-ribbity-start-here.html#categories","text":"This example belongs to the following categories: introductory documentation","title":"Categories"},{"location":"10-install-the-indevelopment-version-of-ribbity.html","text":"Example: install the in-development version of ribbity ribbity-org/ribbity-docs#10 If you want to try out the latest in-development version of ribbity, and do so from a checked-out git repository, you can do the following: first, create a conda environment conda create -n ribbity-dev -y python=3.8 (you can also do this in an existing conda environment). activate the environment: conda activate ribbity-dev and now check out and install ribbity in \"developer mode\": git clone [https://github.com/ribbity-org/ribbity/](https://github.com/ribbity-org/ribbity/) cd ribbity pip install -e . Now, when you run the ribbity commands, they will be running the code that is in the ribbity/ git repository. So, in particular, if you update the code in the repo to the latest main branch with git pull , you will be running the latest unreleased code in ribbity. Categories This example belongs to the following categories: for developers and advanced users","title":"Example: install the in-development version of ribbity"},{"location":"10-install-the-indevelopment-version-of-ribbity.html#example-install-the-in-development-version-of-ribbity","text":"ribbity-org/ribbity-docs#10 If you want to try out the latest in-development version of ribbity, and do so from a checked-out git repository, you can do the following: first, create a conda environment conda create -n ribbity-dev -y python=3.8 (you can also do this in an existing conda environment). activate the environment: conda activate ribbity-dev and now check out and install ribbity in \"developer mode\": git clone [https://github.com/ribbity-org/ribbity/](https://github.com/ribbity-org/ribbity/) cd ribbity pip install -e . Now, when you run the ribbity commands, they will be running the code that is in the ribbity/ git repository. So, in particular, if you update the code in the repo to the latest main branch with git pull , you will be running the latest unreleased code in ribbity.","title":"Example: install the in-development version of ribbity"},{"location":"10-install-the-indevelopment-version-of-ribbity.html#categories","text":"This example belongs to the following categories: for developers and advanced users","title":"Categories"},{"location":"14-automatically-run-ribbity-to-update-your-site-using-github-actions.html","text":"Example: automatically run ribbity to update your site using GitHub Actions ribbity-org/ribbity-docs#14 once your configuration is working and you've built your site with ribbity, you can configure your GitHub repository to run ribbity whenever an issue is changed. The simplest way to do this is to use GitHub Actions. To set up GitHub Actions, add the file https://github.com/ribbity-org/ribbity-docs/blob/main/.github/workflows/ribbity.yml into the .github/workflows directory of your repository. Note that this workflow assumes that your ribbity config file is named site-config.toml and that ribbity runs in the top level directory of your repository. You will then need to go to settings and under 'Actions', 'General', set your workflow permissions to read and write. Now, whenever an issue is changed in any way, ribbity will run on the issue tracker and update your Web site. Categories This example belongs to the following categories: intermediate documentation for fine tuning ribbity","title":"Example: automatically run ribbity to update your site using GitHub Actions"},{"location":"14-automatically-run-ribbity-to-update-your-site-using-github-actions.html#example-automatically-run-ribbity-to-update-your-site-using-github-actions","text":"ribbity-org/ribbity-docs#14 once your configuration is working and you've built your site with ribbity, you can configure your GitHub repository to run ribbity whenever an issue is changed. The simplest way to do this is to use GitHub Actions. To set up GitHub Actions, add the file https://github.com/ribbity-org/ribbity-docs/blob/main/.github/workflows/ribbity.yml into the .github/workflows directory of your repository. Note that this workflow assumes that your ribbity config file is named site-config.toml and that ribbity runs in the top level directory of your repository. You will then need to go to settings and under 'Actions', 'General', set your workflow permissions to read and write. Now, whenever an issue is changed in any way, ribbity will run on the issue tracker and update your Web site.","title":"Example: automatically run ribbity to update your site using GitHub Actions"},{"location":"14-automatically-run-ribbity-to-update-your-site-using-github-actions.html#categories","text":"This example belongs to the following categories: intermediate documentation for fine tuning ribbity","title":"Categories"},{"location":"15-checklist-for-release.html","text":"Example: checklist for release ribbity-org/ribbity-docs#15 A brief checklist for a new release. Before release run make update_output , manually inspect git diff , and set up/merge as PR. For a release create a release against main , and auto-generate change log for release notes. at the command line, run git switch main; git fetch; rm -f dist/*; python setup.py sdist then twine upload dist/* Categories This example belongs to the following categories: for developers and advanced users","title":"Example: checklist for release"},{"location":"15-checklist-for-release.html#example-checklist-for-release","text":"ribbity-org/ribbity-docs#15 A brief checklist for a new release.","title":"Example: checklist for release"},{"location":"15-checklist-for-release.html#before-release","text":"run make update_output , manually inspect git diff , and set up/merge as PR.","title":"Before release"},{"location":"15-checklist-for-release.html#for-a-release","text":"create a release against main , and auto-generate change log for release notes. at the command line, run git switch main; git fetch; rm -f dist/*; python setup.py sdist then twine upload dist/*","title":"For a release"},{"location":"15-checklist-for-release.html#categories","text":"This example belongs to the following categories: for developers and advanced users","title":"Categories"},{"location":"2-create-a-new-github-repository.html","text":"Example: create a new Github repository ribbity-org/ribbity-docs#2 The first thing you need to do is create a new repository on Github . It can be public or private. It does not need to contain any files. Then, go create an issue in your new repository! Next: Example: add some issues to your new repository Categories This example belongs to the following categories: introductory documentation","title":"Example: create a new Github repository"},{"location":"2-create-a-new-github-repository.html#example-create-a-new-github-repository","text":"ribbity-org/ribbity-docs#2 The first thing you need to do is create a new repository on Github . It can be public or private. It does not need to contain any files. Then, go create an issue in your new repository! Next: Example: add some issues to your new repository","title":"Example: create a new Github repository"},{"location":"2-create-a-new-github-repository.html#categories","text":"This example belongs to the following categories: introductory documentation","title":"Categories"},{"location":"3-add-some-issues-to-your-new-repository.html","text":"Example: add some issues to your new repository ribbity-org/ribbity-docs#3 Once you have your new repository, you can create issues containing the content you want to show. Each issue will be its own page on the site that ribbity produces. There are some advanced configuration options you can apply; see Example: configure individual examples using embedded TOML . Next: Example: install and configure ribbity! Categories This example belongs to the following categories: introductory documentation","title":"Example: add some issues to your new repository"},{"location":"3-add-some-issues-to-your-new-repository.html#example-add-some-issues-to-your-new-repository","text":"ribbity-org/ribbity-docs#3 Once you have your new repository, you can create issues containing the content you want to show. Each issue will be its own page on the site that ribbity produces. There are some advanced configuration options you can apply; see Example: configure individual examples using embedded TOML . Next: Example: install and configure ribbity!","title":"Example: add some issues to your new repository"},{"location":"3-add-some-issues-to-your-new-repository.html#categories","text":"This example belongs to the following categories: introductory documentation","title":"Categories"},{"location":"4-install-and-configure-ribbity.html","text":"Example: install and configure ribbity! ribbity-org/ribbity-docs#4 You can install ribbity in a Python environment by running: pip install ribbity Ribbity's configuration is specified in a TOML file and can be very short; for example, here is the sourmash-examples configuration file: # site title title = \"sourmash-examples\" # site name site_name = \"sourmash examples\" # where site will be served from site_url = \"https://sourmash-bio.github.io/sourmash-examples/\" # the github repository from which to pull the issues: github_repo = \"sourmash-bio/sourmash-examples\" # site-specific templates (MORE HERE) add_pages = [ \"index.md\", \"examples.md\", \"labels.md\" ] # username on github (if you want to use authentication with the API; leave empty if not) github_username = 'ctb' # local output file to which to pull issues. issues_dump = 'sourmash-examples.dmp' (MORE HERE) Next: Example: run ribbity for the first time! Categories This example belongs to the following categories: introductory documentation","title":"Example: install and configure ribbity!"},{"location":"4-install-and-configure-ribbity.html#example-install-and-configure-ribbity","text":"ribbity-org/ribbity-docs#4 You can install ribbity in a Python environment by running: pip install ribbity Ribbity's configuration is specified in a TOML file and can be very short; for example, here is the sourmash-examples configuration file: # site title title = \"sourmash-examples\" # site name site_name = \"sourmash examples\" # where site will be served from site_url = \"https://sourmash-bio.github.io/sourmash-examples/\" # the github repository from which to pull the issues: github_repo = \"sourmash-bio/sourmash-examples\" # site-specific templates (MORE HERE) add_pages = [ \"index.md\", \"examples.md\", \"labels.md\" ] # username on github (if you want to use authentication with the API; leave empty if not) github_username = 'ctb' # local output file to which to pull issues. issues_dump = 'sourmash-examples.dmp' (MORE HERE) Next: Example: run ribbity for the first time!","title":"Example: install and configure ribbity!"},{"location":"4-install-and-configure-ribbity.html#categories","text":"This example belongs to the following categories: introductory documentation","title":"Categories"},{"location":"5-run-ribbity-for-the-first-time.html","text":"Example: run ribbity for the first time! ribbity-org/ribbity-docs#5 Once you've built the config file as in https://github.com/ctb/ribbity-docs/issues/4, you can run ribbity like so: ribbity pull <configfile> ribbity build <configfile> and view the site with mkdocs serve which will serve the site on http://localhost:8000/. You can push the site to a Github pages site with mkdocs like so: mkdocs gh-deploy Categories This example belongs to the following categories: introductory documentation","title":"Example: run ribbity for the first time!"},{"location":"5-run-ribbity-for-the-first-time.html#example-run-ribbity-for-the-first-time","text":"ribbity-org/ribbity-docs#5 Once you've built the config file as in https://github.com/ctb/ribbity-docs/issues/4, you can run ribbity like so: ribbity pull <configfile> ribbity build <configfile> and view the site with mkdocs serve which will serve the site on http://localhost:8000/. You can push the site to a Github pages site with mkdocs like so: mkdocs gh-deploy","title":"Example: run ribbity for the first time!"},{"location":"5-run-ribbity-for-the-first-time.html#categories","text":"This example belongs to the following categories: introductory documentation","title":"Categories"},{"location":"6-use-github-authentication-with-ribbity.html","text":"Example: use GitHub authentication with ribbity ribbity-org/ribbity-docs#6 If you need to point ribbity at a private repository or want to retrieve issues faster using the GitHub API, you need to use GitHub authentication. First, set github_username = 'username' in your config file, replacing username with your actual github username :). Second, create a Personal Authentication Token (PAT) that has read access to your account, per the GitHub instructions . Third, set the RIBBITY_GH_TOKEN environment variable to the value of the PAT, e.g. export RIBBITY_GH_TOKEN=ghp_n317359259835nsdf7813rjdsfh1M where ghp_ string is your PAT. Now, when you run ribbity pull you should have access to private repositories and authenticated use of the GitHub API. Categories This example belongs to the following categories: intermediate documentation for fine tuning ribbity","title":"Example: use GitHub authentication with ribbity"},{"location":"6-use-github-authentication-with-ribbity.html#example-use-github-authentication-with-ribbity","text":"ribbity-org/ribbity-docs#6 If you need to point ribbity at a private repository or want to retrieve issues faster using the GitHub API, you need to use GitHub authentication. First, set github_username = 'username' in your config file, replacing username with your actual github username :). Second, create a Personal Authentication Token (PAT) that has read access to your account, per the GitHub instructions . Third, set the RIBBITY_GH_TOKEN environment variable to the value of the PAT, e.g. export RIBBITY_GH_TOKEN=ghp_n317359259835nsdf7813rjdsfh1M where ghp_ string is your PAT. Now, when you run ribbity pull you should have access to private repositories and authenticated use of the GitHub API.","title":"Example: use GitHub authentication with ribbity"},{"location":"6-use-github-authentication-with-ribbity.html#categories","text":"This example belongs to the following categories: intermediate documentation for fine tuning ribbity","title":"Categories"},{"location":"7-use-your-own-jinja2-template-for-index.md-and-other-files.html","text":"Example: use your own jinja2 template for index.md and other files ribbity-org/ribbity-docs#7 ribbity uses jinja2 templating to build Markdown pages from GitHub issues. It comes with several default templates: index.md , examples.md , and labels.md , as well as _generic_issue.md and _generic_label.md ; you can see the default templates here . You can override any of these templates by creating a directory site-templates/ within the directory where you're running ribbity, and putting an updated version of the template in that directory (with the same name). Templates in the site-templates/ directory will be read before the templates included with ribbity, and so will override them. This is how projects like ribbity docs customize the main page, by providing their own index.md template. Example templates You can see some example templates at the following projects: sourmash examples ribbity docs The jinja2 templating language Please see the jinja2 template designer docs for information on jinja2 templates. Categories This example belongs to the following categories: intermediate documentation for fine tuning ribbity","title":"Example: use your own jinja2 template for `index.md` and other files"},{"location":"7-use-your-own-jinja2-template-for-index.md-and-other-files.html#example-use-your-own-jinja2-template-for-indexmd-and-other-files","text":"ribbity-org/ribbity-docs#7 ribbity uses jinja2 templating to build Markdown pages from GitHub issues. It comes with several default templates: index.md , examples.md , and labels.md , as well as _generic_issue.md and _generic_label.md ; you can see the default templates here . You can override any of these templates by creating a directory site-templates/ within the directory where you're running ribbity, and putting an updated version of the template in that directory (with the same name). Templates in the site-templates/ directory will be read before the templates included with ribbity, and so will override them. This is how projects like ribbity docs customize the main page, by providing their own index.md template.","title":"Example: use your own jinja2 template for index.md and other files"},{"location":"7-use-your-own-jinja2-template-for-index.md-and-other-files.html#example-templates","text":"You can see some example templates at the following projects: sourmash examples ribbity docs","title":"Example templates"},{"location":"7-use-your-own-jinja2-template-for-index.md-and-other-files.html#the-jinja2-templating-language","text":"Please see the jinja2 template designer docs for information on jinja2 templates.","title":"The jinja2 templating language"},{"location":"7-use-your-own-jinja2-template-for-index.md-and-other-files.html#categories","text":"This example belongs to the following categories: intermediate documentation for fine tuning ribbity","title":"Categories"},{"location":"8-configure-individual-examples-using-embedded-toml.html","text":"Example: configure individual examples using embedded TOML ribbity-org/ribbity-docs#8 you can set options for individual posts by using TOML . To do this, write TOML configuration as below, priority = 999 # sort order - 999 is default, lowest priority. 1 is highest. frontpage = false # true to show up on front page ignore = false # true to ignore this issue entirely and enclose it in --- both before and after. The TOML will then be parsed by ribbity and the options will be applied. Generally, you will want to hide these options from viewers. This can be done by enclosing them in Markdown / HTML comment markers, that is, putting <!-- and --> around the TOML configuration section. Example Here is an example - this is a screenshot of issue 1 in the editor. Categories This example belongs to the following categories: intermediate documentation for fine tuning ribbity","title":"Example: configure individual examples using embedded TOML"},{"location":"8-configure-individual-examples-using-embedded-toml.html#example-configure-individual-examples-using-embedded-toml","text":"ribbity-org/ribbity-docs#8 you can set options for individual posts by using TOML . To do this, write TOML configuration as below, priority = 999 # sort order - 999 is default, lowest priority. 1 is highest. frontpage = false # true to show up on front page ignore = false # true to ignore this issue entirely and enclose it in --- both before and after. The TOML will then be parsed by ribbity and the options will be applied. Generally, you will want to hide these options from viewers. This can be done by enclosing them in Markdown / HTML comment markers, that is, putting <!-- and --> around the TOML configuration section.","title":"Example: configure individual examples using embedded TOML"},{"location":"8-configure-individual-examples-using-embedded-toml.html#example","text":"Here is an example - this is a screenshot of issue 1 in the editor.","title":"Example"},{"location":"8-configure-individual-examples-using-embedded-toml.html#categories","text":"This example belongs to the following categories: intermediate documentation for fine tuning ribbity","title":"Categories"},{"location":"examples.html","text":"All examples Go to: Home | All categories Example: Welcome to ribbity! Start here! Example: create a new Github repository Example: add some issues to your new repository Example: install and configure ribbity! Example: run ribbity for the first time! Example: automatically run ribbity to update your site using GitHub Actions Example: checklist for release Example: configure individual examples using embedded TOML Example: install the in-development version of ribbity Example: use GitHub authentication with ribbity Example: use your own jinja2 template for index.md and other files","title":"All examples"},{"location":"examples.html#all-examples","text":"Go to: Home | All categories Example: Welcome to ribbity! Start here! Example: create a new Github repository Example: add some issues to your new repository Example: install and configure ribbity! Example: run ribbity for the first time! Example: automatically run ribbity to update your site using GitHub Actions Example: checklist for release Example: configure individual examples using embedded TOML Example: install the in-development version of ribbity Example: use GitHub authentication with ribbity Example: use your own jinja2 template for index.md and other files","title":"All examples"},{"location":"l-advanced.html","text":"Category: for developers and advanced users Example: checklist for release Example: install the in-development version of ribbity","title":"Category: for developers and advanced users"},{"location":"l-advanced.html#category-for-developers-and-advanced-users","text":"Example: checklist for release Example: install the in-development version of ribbity","title":"Category: for developers and advanced users"},{"location":"l-intermediate.html","text":"Category: intermediate documentation for fine tuning ribbity Example: automatically run ribbity to update your site using GitHub Actions Example: configure individual examples using embedded TOML Example: use your own jinja2 template for index.md and other files Example: use GitHub authentication with ribbity","title":"Category: intermediate documentation for fine tuning ribbity"},{"location":"l-intermediate.html#category-intermediate-documentation-for-fine-tuning-ribbity","text":"Example: automatically run ribbity to update your site using GitHub Actions Example: configure individual examples using embedded TOML Example: use your own jinja2 template for index.md and other files Example: use GitHub authentication with ribbity","title":"Category: intermediate documentation for fine tuning ribbity"},{"location":"l-intro.html","text":"Category: introductory documentation Example: run ribbity for the first time! Example: install and configure ribbity! Example: add some issues to your new repository Example: create a new Github repository Example: Welcome to ribbity! Start here!","title":"Category: introductory documentation"},{"location":"l-intro.html#category-introductory-documentation","text":"Example: run ribbity for the first time! Example: install and configure ribbity! Example: add some issues to your new repository Example: create a new Github repository Example: Welcome to ribbity! Start here!","title":"Category: introductory documentation"},{"location":"labels.html","text":"All categories Go to: Home | All examples for developers and advanced users - 2 examples intermediate documentation for fine tuning ribbity - 4 examples introductory documentation - 5 examples","title":"All categories"},{"location":"labels.html#all-categories","text":"Go to: Home | All examples for developers and advanced users - 2 examples intermediate documentation for fine tuning ribbity - 4 examples introductory documentation - 5 examples","title":"All categories"}]}